{
  "version": 3,
  "sources": ["../../node_modules/spotify-audio-element/spotify-audio-element.js"],
  "sourcesContent": ["// https://developer.spotify.com/documentation/embeds/tutorials/using-the-iframe-api\n\nconst EMBED_BASE = 'https://open.spotify.com';\nconst MATCH_SRC = /open\\.spotify\\.com\\/(\\w+)\\/(\\w+)/i;\nconst API_URL = 'https://open.spotify.com/embed-podcast/iframe-api/v1';\nconst API_GLOBAL = 'SpotifyIframeApi';\nconst API_GLOBAL_READY = 'onSpotifyIframeApiReady';\n\nfunction getTemplateHTML(attrs) {\n  const iframeAttrs = {\n    src: serializeIframeUrl(attrs),\n    frameborder: 0,\n    width: '100%',\n    height: '100%',\n    allow: 'accelerometer; fullscreen; autoplay; encrypted-media; gyroscope; picture-in-picture',\n  };\n\n  return /*html*/`\n    <style>\n      :host {\n        display: inline-block;\n        min-width: 160px;\n        min-height: 80px;\n        position: relative;\n      }\n      iframe {\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n      :host(:not([controls])) {\n        display: none !important;\n      }\n    </style>\n    <iframe${serializeAttributes(iframeAttrs)}></iframe>\n  `;\n}\n\nfunction serializeIframeUrl(attrs) {\n  if (!attrs.src) return;\n\n  const matches = attrs.src.match(MATCH_SRC);\n  const type = matches && matches[1];\n  const metaId = matches && matches[2];\n\n  const params = {\n    t: attrs.starttime,\n    theme: attrs.theme === 'dark' ? '0' : null,\n  };\n\n  return `${EMBED_BASE}/embed/${type}/${metaId}?${serialize(params)}`;\n}\n\nclass SpotifyAudioElement extends (globalThis.HTMLElement ?? class {}) {\n  static getTemplateHTML = getTemplateHTML;\n  static shadowRootOptions = { mode: 'open' };\n  static observedAttributes = [\n    'controls',\n    'loop',\n    'src',\n    'starttime',\n    'continuous',\n    'theme',\n  ];\n\n  loadComplete = new PublicPromise();\n  #loadRequested;\n  #hasLoaded;\n  #isInit;\n  #isWaiting = false;\n  #closeToEnded = false;\n\n  #paused = true;\n  #currentTime = 0;\n  #duration = NaN;\n  #seeking = false;\n\n  async load() {\n    if (this.#loadRequested) return;\n\n    if (this.#hasLoaded) this.loadComplete = new PublicPromise();\n    this.#hasLoaded = true;\n\n    // Wait 1 tick to allow other attributes to be set.\n    await (this.#loadRequested = Promise.resolve());\n    this.#loadRequested = null;\n\n    this.#isWaiting = false;\n    this.#closeToEnded = false;\n\n    this.#currentTime = 0;\n    this.#duration = NaN;\n    this.#seeking = false;\n\n    this.dispatchEvent(new Event('emptied'));\n\n    let oldApi = this.api;\n    this.api = null;\n\n    if (!this.src) {\n      return;\n    }\n\n    this.dispatchEvent(new Event('loadstart'));\n\n    const options = {\n      t: this.startTime,\n      theme: this.theme === 'dark' ? '0' : null,\n    };\n\n    if (this.#isInit) {\n      this.api = oldApi;\n      this.api.iframeElement.src = serializeIframeUrl(namedNodeMapToObject(this.attributes));\n\n    } else {\n      this.#isInit = true;\n\n      if (!this.shadowRoot) {\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.innerHTML = getTemplateHTML(namedNodeMapToObject(this.attributes));\n      }\n\n      let iframe = this.shadowRoot.querySelector('iframe');\n\n      const Spotify = await loadScript(API_URL, API_GLOBAL, API_GLOBAL_READY);\n\n      this.api = await new Promise((resolve) =>\n        Spotify.createController(iframe, options, resolve));\n      this.api.iframeElement = iframe;\n\n      this.api.addListener('ready', () => {\n        this.dispatchEvent(new Event('loadedmetadata'));\n        this.dispatchEvent(new Event('durationchange'));\n        this.dispatchEvent(new Event('volumechange'));\n      });\n\n      // If everyone could just use the HTMLMediaElement API for their player API's :(\n\n      this.api.addListener('playback_update', (event) => {\n\n        if (this.#closeToEnded && this.#paused && (event.data.isBuffering || !event.data.isPaused)) {\n          this.#closeToEnded = false;\n          this.currentTime = 1;\n          return;\n        }\n\n        if (event.data.duration / 1000 !== this.#duration) {\n          this.#closeToEnded = false;\n          this.#duration = event.data.duration / 1000;\n          this.dispatchEvent(new Event('durationchange'));\n        }\n\n        if (event.data.position / 1000 !== this.#currentTime) {\n          this.#seeking = false;\n          this.#closeToEnded = false;\n          this.#currentTime = event.data.position / 1000;\n          this.dispatchEvent(new Event('timeupdate'));\n        }\n\n        if (!this.#isWaiting && !this.#paused && event.data.isPaused) {\n          this.#paused = true;\n          this.dispatchEvent(new Event('pause'));\n          return;\n        }\n\n        if (this.#paused && (event.data.isBuffering || !event.data.isPaused)) {\n          this.#paused = false;\n          this.dispatchEvent(new Event('play'));\n\n          this.#isWaiting = event.data.isBuffering;\n\n          if (this.#isWaiting) {\n            this.dispatchEvent(new Event('waiting'));\n          } else {\n            this.dispatchEvent(new Event('playing'));\n          }\n          return;\n        }\n\n        if (this.#isWaiting && !event.data.isPaused) {\n          this.#isWaiting = false;\n          this.dispatchEvent(new Event('playing'));\n          return;\n        }\n\n        if (!this.paused && !this.seeking && !this.#closeToEnded && Math.ceil(this.currentTime) >= this.duration) {\n          this.#closeToEnded = true;\n\n          if (this.loop) {\n            this.currentTime = 1;\n            return;\n          }\n\n          if (!this.continuous) {\n            this.pause();\n            this.dispatchEvent(new Event('ended'));\n          }\n          return;\n        }\n      });\n    }\n\n    this.loadComplete.resolve();\n    await this.loadComplete;\n  }\n\n  async attributeChangedCallback(attrName, oldValue, newValue) {\n    if (oldValue === newValue) return;\n\n    // This is required to come before the await for resolving loadComplete.\n    switch (attrName) {\n      case 'src':\n      case 'theme':\n      case 'starttime': {\n        this.load();\n        return;\n      }\n    }\n  }\n\n  async play() {\n    this.#paused = false;\n    this.#isWaiting = true;\n    this.dispatchEvent(new Event('play'));\n\n    await this.loadComplete;\n\n    return this.api?.resume();\n  }\n\n  async pause() {\n    await this.loadComplete;\n    return this.api?.pause();\n  }\n\n  get paused() {\n    return this.#paused ?? true;\n  }\n\n  get muted() {\n    return false;\n  }\n\n  get volume() {\n    return 1;\n  }\n\n  get ended() {\n    return Math.ceil(this.currentTime) >= this.duration;\n  }\n\n  get seeking() {\n    return this.#seeking;\n  }\n\n  get loop() {\n    return this.hasAttribute('loop');\n  }\n\n  set loop(val) {\n    if (this.loop == val) return;\n    this.toggleAttribute('loop', Boolean(val));\n  }\n\n  get currentTime() {\n    return this.#currentTime;\n  }\n\n  set currentTime(val) {\n    if (this.currentTime == val) return;\n\n    this.#seeking = true;\n\n    let oldTime = this.#currentTime;\n    this.#currentTime = val;\n    this.dispatchEvent(new Event('timeupdate'));\n    this.#currentTime = oldTime;\n\n    this.loadComplete.then(() => {\n      this.api?.seek(val);\n    });\n  }\n\n  get duration() {\n    return this.#duration;\n  }\n\n  get src() {\n    return this.getAttribute('src');\n  }\n\n  set src(val) {\n    this.setAttribute('src', `${val}`);\n  }\n\n  get startTime() {\n    return parseFloat(this.getAttribute('starttime') ?? 0);\n  }\n\n  set startTime(val) {\n    if (this.startTime == val) return;\n    this.setAttribute('starttime', +val);\n  }\n\n  get theme() {\n    return this.getAttribute('theme');\n  }\n\n  set theme(val) {\n    this.setAttribute('theme', val);\n  }\n\n  get continuous() {\n    return this.hasAttribute('continuous');\n  }\n\n  set continuous(val) {\n    if (this.continuous == val) return;\n    this.toggleAttribute('continuous', Boolean(val));\n  }\n}\n\nfunction serializeAttributes(attrs) {\n  let html = '';\n  for (const key in attrs) {\n    const value = attrs[key];\n    if (value === '') html += ` ${key}`;\n    else html += ` ${key}=\"${value}\"`;\n  }\n  return html;\n}\n\nfunction serialize(props) {\n  return String(new URLSearchParams(boolToBinary(props)));\n}\n\nfunction boolToBinary(props) {\n  let p = {};\n  for (let key in props) {\n    let val = props[key];\n    if (val === true || val === '') p[key] = 1;\n    else if (val === false) p[key] = 0;\n    else if (val != null) p[key] = val;\n  }\n  return p;\n}\n\nfunction namedNodeMapToObject(namedNodeMap) {\n  let obj = {};\n  for (let attr of namedNodeMap) {\n    obj[attr.name] = attr.value;\n  }\n  return obj;\n}\n\nconst loadScriptCache = {};\nasync function loadScript(src, globalName, readyFnName) {\n  if (loadScriptCache[src]) return loadScriptCache[src];\n  if (globalName && self[globalName]) {\n    return Promise.resolve(self[globalName]);\n  }\n  return (loadScriptCache[src] = new Promise(function (resolve, reject) {\n    const script = document.createElement('script');\n    script.src = src;\n    const ready = (api) => resolve(api);\n    if (readyFnName) (self[readyFnName] = ready);\n    script.onload = () => !readyFnName && ready();\n    script.onerror = reject;\n    document.head.append(script);\n  }));\n}\n\n/**\n * A utility to create Promises with convenient public resolve and reject methods.\n * @return {Promise}\n */\nclass PublicPromise extends Promise {\n  constructor(executor = () => {}) {\n    let res, rej;\n    super((resolve, reject) => {\n      executor(resolve, reject);\n      res = resolve;\n      rej = reject;\n    });\n    this.resolve = res;\n    this.reject = rej;\n  }\n}\n\nif (globalThis.customElements && !globalThis.customElements.get('spotify-audio')) {\n  globalThis.customElements.define('spotify-audio', SpotifyAudioElement);\n}\n\nexport default SpotifyAudioElement;\n"],
  "mappings": "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",
  "names": []
}
